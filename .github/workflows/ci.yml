name: Entur/Helm/CI

on:
  pull_request:

jobs:
  verify-pr:
    name: Verify PR
    if: ${{ github.event_name == 'pull_request' }}
    uses: entur/gha-meta/.github/workflows/verify-pr.yml@v1
  test-lint-ok-gcp:
    uses: ./.github/workflows/lint.yml
    with:
      environment: dev
      chart: fixture/helm/amazing-app
  test-unittest-ok:
    uses: ./.github/workflows/unittest.yml
    with:
      chart: fixture/helm/amazing-app-az
  test-lint-ok-azure:
    needs: [test-unittest-ok]
    uses: ./.github/workflows/lint.yml
    with:
      environment: az-dev
      chart: fixture/helm/amazing-app-az

  test-deploy-ok-gcp:
    needs: [test-lint-ok-gcp]
    uses: ./.github/workflows/deploy.yml
    concurrency:
      group: ${{ github.head_ref }}-gcp
      cancel-in-progress: true
    with:
      environment: dev
      image: getting-started:latest
      chart: fixture/helm/amazing-app
      release_name: amazing-app
      namespace: gha-ci
    secrets: inherit

  test-deploy-gcp-with-failed-rollback:
    needs: [test-deploy-ok-gcp]
    runs-on: ubuntu-24.04
    environment: dev
    timeout-minutes: 6
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v5
      - id: install
        uses: azure/setup-helm@v4
      - id: cloud-auth
        uses: entur/gha-meta/.github/actions/cloud-auth@v1
        with:
          environment: dev
          gcp_workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.SERVICE_ACCOUNT }}
      - uses: entur/gha-meta/.github/actions/k8s-auth@v1
        with:
          environment: dev
      - id: helm-deploy
        continue-on-error: true
        uses: entur/gha-helm/.github/actions/helm-deploy@v1
        with:
          timeout_minutes: 6
          image: mybadimage:dummy
          release_name: amazing-app
          chart: fixture/helm/amazing-app
          namespace: gha-ci
      - name: Check if rollback did succeed
        if: steps.helm-deploy.outputs.HELM_DEPLOY_STATUS != '3'
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Rollback should fail.')

  test-deploy-gcp-no-image-update:
    if: (success() || failure()) && needs.test-deploy-gcp-with-failed-rollback.result == 'success'
    needs: [test-deploy-gcp-with-failed-rollback]
    uses: ./.github/workflows/deploy.yml
    concurrency:
      group: ${{ github.head_ref }}-gcp
      cancel-in-progress: true
    with:
      environment: dev
      image: na
      chart: fixture/helm/amazing-app
      release_name: amazing-app
      namespace: gha-ci
      timeout_minutes: 6
    secrets: inherit

  cleanup-deploy-gcp:
    # run regardless of previous job status
    if: always()
    needs: [test-deploy-ok-gcp, test-deploy-gcp-no-image-update]
    runs-on: ubuntu-24.04
    environment: dev
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: entur/gha-meta/.github/actions/cloud-auth@v1
        with:
          environment: dev
          cloud_provider: gcp
          gcp_workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          gcp_service_account: ${{ vars.SERVICE_ACCOUNT }}
      - uses: entur/gha-meta/.github/actions/k8s-auth@v1
        with:
          environment: dev
          cloud_provider: gcp
      - id: clean
        run: |
          helm uninstall amazing-app -n gha-ci

  test-deploy-ok-azure:
    needs: [test-lint-ok-azure]
    uses: ./.github/workflows/deploy.yml
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    concurrency:
      group: ${{ github.head_ref }}-azure
      cancel-in-progress: true
    with:
      environment: az-dev
      cloud_provider: az
      image: entur/getting-started:test-helm-deploy.20240418-SHAd860147
      chart: fixture/helm/amazing-app-az
      release_name: amazing-app
      namespace: ghaci
    secrets: inherit
  cleanup-deploy-azure:
    if: always()
    needs: [test-deploy-ok-azure]
    runs-on: ubuntu-24.04
    environment: az-dev
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - id: install
        uses: azure/setup-helm@v4
      - id: login-azure
        uses: Azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      - id: kubelogin-azure
        uses: azure/use-kubelogin@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          kubelogin-version: "latest"
      - id: set-context-azure
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ vars.AZURE_CLUSTER_RESOURCE_GROUP }}
          cluster-name: ${{ vars.AZURE_CLUSTER_NAME }}
          admin: false
          use-kubelogin: true
      - id: clean
        run: |
          helm uninstall amazing-app -n ghaci
  update-lint-doc:
    # run only if both test-deploy-ok-azure and test-deploy-gcp-no-image-update are successful, but ignore rollback failure
    if: (success() || failure()) && needs.test-deploy-gcp-no-image-update.result == 'success' && needs.test-deploy-ok-azure.result == 'success'
    needs:
      [
        cleanup-deploy-azure,
        cleanup-deploy-gcp,
        test-deploy-ok-azure,
        test-deploy-gcp-no-image-update,
      ]
    uses: entur/gha-meta/.github/workflows/auto-doc.yml@v1
    with:
      workflow_file: .github/workflows/lint.yml
      readme_file: README-lint.md
  update-build-doc:
    if: (success() || failure()) && needs.update-lint-doc.result == 'success'
    needs: [update-lint-doc]
    uses: entur/gha-meta/.github/workflows/auto-doc.yml@v1
    with:
      workflow_file: .github/workflows/deploy.yml
      readme_file: README-deploy.md
  update-unittest-doc:
    if: (success() || failure()) && needs.update-build-doc.result == 'success'
    needs: [update-build-doc]
    uses: entur/gha-meta/.github/workflows/auto-doc.yml@v1
    with:
      workflow_file: .github/workflows/unittest.yml
      readme_file: README-unittest.md
