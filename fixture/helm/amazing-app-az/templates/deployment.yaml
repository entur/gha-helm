apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.releaseName }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "labels" . |trim| nindent 4 }}
  annotations:
    {{- include "annotations" . |trim| nindent 4 }}
spec:
  selector:
    matchLabels:
      app: amazing-app
  replicas: 1
  template:
    metadata:
      labels:
        app: amazing-app
    spec:
      securityContext:
        runAsUser: 101
        runAsGroup: 101
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: amazing-app
          image: {{ .Values.common.container.image }}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 5
          readinessProbe:
            httpGet:
              scheme: HTTP
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - containerPort: 8080
